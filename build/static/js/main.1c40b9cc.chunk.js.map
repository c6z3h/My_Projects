{"version":3,"sources":["reducers/notificationReducer.js","services/links.js","reducers/linkReducer.js","store.js","components/Links.js","hooks/index.js","components/SubmitForm.js","components/Notification.js","App.js","services/reactGA.js","index.js"],"names":["addNotification","notification","timeout","dispatch","a","type","data","setTimeout","reducer","state","action","baseUrl","axios","get","then","response","linkObject","post","createLink","linkService","newLink","console","log","combineReducers","links","linkReducer","notificationReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","Links","url","randomNumber","length","href","link","target","rel","useField","useState","value","setValue","onChange","event","reset","SubmitForm","useDispatch","add","preventDefault","onSubmit","placeholder","Notification","useSelector","style","border","padding","borderWidth","className","Footer","color","background","fontStyle","fontSize","left","bottom","right","App","useEffect","page","ReactGA","initialize","pageview","allLinks","setGIFLinks","setWebLinks","ListOfLinkOfChoice","GIFLinks","webLinks","GIFArray","map","GIFobject","selectedPicture","Math","floor","random","backgroundImage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c40b9cc.chunk.js","sourcesContent":["let timer\r\n\r\nconst reducer = (state = '', action) => {\r\n    // console.log('NOTIF state now: ', state)\r\n    // console.log('NOTIF action', action)\r\n    switch (action.type) {\r\n      case 'NEW_LINK2':\r\n        // return [...state, action.data]\r\n        return state = action.data.notification\r\n      default: return state\r\n    }\r\n  }\r\n  \r\n  export const addNotification = (notification, timeout) => {\r\n    return async dispatch => {\r\n      dispatch ({\r\n        type: 'NEW_LINK2', // cannot use 'VOTE_NOTE' same as anecdoteReducer\r\n        data: { notification }\r\n      })\r\n      // clearTimeout(timer)\r\n      timer = setTimeout(() => dispatch({\r\n        type: 'NEW_LINK2',\r\n        data: { notification: '' }\r\n      }), timeout * 5000)     \r\n    }\r\n      \r\n    }\r\n\r\nexport default reducer","import axios from 'axios'\r\n// const baseUrl = 'http://localhost:3001/links'\r\nconst baseUrl = '/api/links' // Use relative url\r\n// Now HTTP GET requests to the address www.serversaddress.com/index.html or www.serversaddress.com will show the React frontend. GET requests to the address www.serversaddress.com/api/notes will be handled by the backend's code.\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst getAllGIFs = () => {\r\n  const request = axios.get(`${baseUrl}/GIF`)\r\n  // return request.then(response => response.data)\r\n   return request.then(response => {\r\n    // console.log(response) \r\n    return response.data\r\n   })\r\n}\r\n\r\nconst getAllLinks = () => {\r\n  const request = axios.get(`${baseUrl}/link`)\r\n  // return request.then(response => response.data)\r\n  return request.then(response => {\r\n    // console.log(response)\r\n    return response.data\r\n   })\r\n}\r\n\r\nconst create = linkObject => {\r\n  const request = axios.post(baseUrl, linkObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, linkObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, linkObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  // const request = \r\n  axios.delete(`${baseUrl}/${id}`)\r\n  return getAll()\r\n}\r\nexport default { getAll, getAllGIFs, getAllLinks, create, update, remove }","import linkService from '../services/links'\r\n\r\nconst reducer = (state = [], action) => {\r\n  // console.log('LINK state now: ', state)\r\n  // console.log('LINK action', action)\r\n  switch (action.type) {\r\n    case 'NEW_LINK':\r\n    //   const newState = state.concat(action.data)\r\n      return [...state, action.data]\r\n    case 'INIT_LINKS':\r\n      return action.data\r\n  }\r\n  return state\r\n}\r\n// DO I REALLY NEED THIS?\r\nexport const initializeLinks = () => {\r\n  return async dispatch => {\r\n    const links = await linkService.getAll()\r\n    dispatch ({\r\n      type: 'INIT_LINKS',\r\n      data: links\r\n    })\r\n  }\r\n}\r\n\r\nexport const createLink = (linkObject) => {\r\n  return async dispatch => {\r\n    const newLink = await linkService.create(linkObject)\r\n    console.log(newLink)\r\n    dispatch ({\r\n      type: 'NEW_LINK',\r\n      data: newLink\r\n    })\r\n  }\r\n}\r\n\r\nexport default reducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport notificationReducer from './reducers/notificationReducer'\r\nimport linkReducer from './reducers/linkReducer'\r\n\r\nconst reducer = combineReducers({\r\n  links: linkReducer,\r\n  notification: notificationReducer,\r\n//   filter: filterReducer,\r\n})\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\n\r\nexport default store","\r\nconst Links = ({url, randomNumber}) => {\r\n    // console.log(\"weblinks: \",url)\r\n    // console.log(\"weblinks randNo: \",randomNumber)\r\n    if (url.length !== 0){\r\n        return (\r\n            <div>\r\n                <a href={url[randomNumber].link} target=\"_blank\" rel=\"noreferrer\">Inspiration here!</a>\r\n            </div>\r\n        )\r\n    }\r\n    return null\r\n}\r\n\r\nexport default Links","import { useState } from 'react'\r\n\r\nconst useField = (type) => {\r\n  const [value, setValue] = useState('')\r\n\r\n  const onChange = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const reset = () => {\r\n    setValue('')\r\n  }\r\n\r\n  return {\r\n    type,\r\n    value,\r\n    onChange,\r\n    reset\r\n  }\r\n}\r\n\r\nexport default useField","// import { useSelector, useDispatch } from 'react-redux'\r\nimport React from 'react'\r\nimport  useField from '../hooks/index'\r\nimport { useDispatch } from 'react-redux'\r\nimport { createLink } from '../reducers/linkReducer'\r\nimport { addNotification } from '../reducers/notificationReducer'\r\n// import { addNotification } from '../reducers/notificationReducer'\r\n\r\n// const SubmitForm = ({addLink,data}) => {\r\nconst SubmitForm = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const link = useField('text')\r\n    const type = useField('text')\r\n\r\n    const add = async (event) => {\r\n        event.preventDefault()\r\n        if (type.value === ''){\r\n            type.value = 'GIF'\r\n        }\r\n        // console.log(`link and type here: ${event}, ${link.value}, ${type.value}`)\r\n        let linkObject = {\r\n            link: link.value,\r\n            type: type.value,\r\n        }\r\n        // console.log(`link and type here: ${event}, ${link.value}, ${type.value}`)\r\n        reset()\r\n        dispatch(createLink(linkObject))\r\n        console.log(\"it breaks here\")\r\n        dispatch(addNotification(linkObject.link, 1))\r\n        // props.addNotification(`${link} added.`, 1)\r\n    }\r\n\r\n    const reset = () => {\r\n        link.reset()\r\n        type.reset()\r\n      }\r\n\r\n    return(\r\n        <form onSubmit={add}>\r\n            <div>\r\n                URL:\r\n                <input {...link} reset='' placeholder=\"https://upload.wikimedia.org/wikipedia/commons/...\"/>\r\n                <select {...type} reset='GIF'>\r\n                    <option value=\"GIF\">GIF</option>\r\n                    <option value=\"link\">Link</option>\r\n                </select>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n        // <form onSubmit={addLink}>\r\n        //     <div>\r\n        //         {/* <SafeAreaView> */}\r\n        //         URL: <input\r\n        //         value={data.newLink}\r\n        //         onChange={data.handleLinkChange}\r\n        //         placeholder=\"https://upload.wikimedia.org/wikipedia/commons/...\"\r\n        //         />\r\n        //         {/* </SafeAreaView> */}\r\n        //         <select value={data.newType} onChange={data.handleTypeChange}>\r\n        //             <option> </option>\r\n        //             <option value=\"GIF\">GIF</option>\r\n        //             <option value=\"link\">Link</option>\r\n        //         </select>\r\n        //         <button type=\"submit\">add</button>\r\n        //     </div>\r\n        // </form>\r\n    )\r\n}\r\n\r\nexport default SubmitForm","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Notification = () => {\r\n\tconst notification = useSelector((state) => state.notification)\r\n\tconsole.log(notification)\r\n\tconst style = {\r\n\t\tborder: 'solid',\r\n\t\tpadding: 15,\r\n\t\tborderWidth: 1,\r\n\t}\r\n\tif (notification === '') {\r\n\t\treturn <div style={style}></div>\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<div style={style} className=\"body\">\r\n\t\t\t\tYou added {notification}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Notification ","import React, { useState, useEffect } from 'react'\r\n// import GIFs from './components/GIFs'\r\nimport Links from './components/Links'\r\nimport SubmitForm from './components/SubmitForm'\r\nimport Notification from './components/Notification'\r\nimport linkService from './services/links'\r\nimport './App.css'\r\nimport './responsive.css'\r\nimport './services/reactGA'\r\nimport { initGA, trackingPageGA } from './services/reactGA'\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'blue',\r\n    background: 'gray',\r\n    fontStyle: 'italic',\r\n    fontSize: 25,\r\n    left:0,\r\n    bottom:0,\r\n    right:0\r\n  }\r\n  return (\r\n    <div style={footerStyle} className=\"footer\">\r\n      <em>comments/feedback to: <a href=\"https://github.com/c6z3h\">c6z3h</a></em>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  \r\n  const hook = () => {\r\n    initGA()\r\n    trackingPageGA('/')\r\n  }\r\n\r\n  useEffect(hook, [])\r\n  \r\n // google analytics events\r\n//  const googleAnalyticsEvent = () => {\r\n//   eventGA('main-button', 'buttonAction');\r\n// }\r\n\r\n// return (\r\n//   <div className=\"App\">\r\n//     <header className=\"App-header\">\r\n//       <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n//       <button className=\"App-button\" onClick={googleAnalyticsEvent}>\r\n\r\n  // 0. READ GIFs\r\nconst hook1 = () => {\r\n  linkService\r\n  .getAllGIFs()\r\n  .then(allLinks => {\r\n    // console.log(`this is allLinks: ${allLinks}`)\r\n    setGIFLinks(allLinks)\r\n  })\r\n}\r\n\r\nuseEffect(hook1, [])\r\n// 0. READ LINKs\r\nconst hook2 = () => {\r\n  linkService\r\n  .getAllLinks()\r\n  .then(allLinks => {\r\n    // console.log(`this is allLinks: ${allLinks}`)\r\n    setWebLinks(allLinks)\r\n  })\r\n}\r\n\r\nuseEffect(hook2, [])\r\n\r\n  // 1. INIT -- for user-submission\r\n  // const [ links, setLinks ] = useState([]) \r\n  // const [ newLink, setNewLinks ] = useState('')\r\n  // const [ newType, setNewType ] = useState('GIF')\r\n// 1. INIT -- for rendering GIF or weblinks\r\n  const [ GIFLinks, setGIFLinks ] = useState([])\r\n  const [ webLinks, setWebLinks ] = useState([])\r\n\r\n  // // Event Handler\r\n  // const handleLinkChange = (event) => setNewLinks(event.target.value)\r\n  // const handleTypeChange= (event) => setNewType(event.target.value)\r\n  // const handleGIFChange = (event) => setGIFLinks(...GIFLinks)\r\n\r\n  const randomNumberGenerator = (ListOfLinkOfChoice) => {\r\n    return Math.floor(Math.random()*ListOfLinkOfChoice.length)\r\n  }\r\n\r\n  // const refresh = {\r\n  //   handleGIFChange\r\n  // }\r\n\r\nconst GIFArray = GIFLinks.map(GIFobject => GIFobject.link)\r\n// console.log(`IMMA GIFLINKS ${JSON.stringify(GIFLinks)}`)\r\n// console.log(`IMMA GIFARRAY ${GIFArray}`)\r\nconst randomIndex = Math.floor(Math.random() * GIFArray.length);\r\nconst selectedPicture = GIFArray[randomIndex];\r\n// console.log(`IMMA selected ${selectedPicture}`)\r\n\r\nreturn (\r\n  <div style={{ backgroundImage: `url(${selectedPicture}`}} className=\"background-image responsive\">\r\n       <Notification />\r\n       {/* <br /> */}\r\n       <h1 className=\"line__1\">Welcome! What inspiration</h1>\r\n       <h1 className=\"line__2\">will you find today?</h1>\r\n       <Links style=\"padding:50\" url={webLinks} randomNumber={randomNumberGenerator(webLinks)}/>\r\n       <p className=\"body\"> Add a GIF or Link to inspire someone else below! </p>\r\n       <SubmitForm />\r\n       <a target=\"_blank\" href={selectedPicture} className=\"body\" rel=\"noreferrer\">Image Credits</a>\r\n       <Footer/> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import ReactGA from 'react-ga';\r\n// ReactGA.initialize('UA-000000-01');\r\n// ReactGA.pageview(window.location.pathname + window.location.search);\r\nconst TRACKING_ID = 'UA-212129212-1';\r\n\r\nexport const initGA = () => {\r\n  ReactGA.initialize(TRACKING_ID);\r\n};\r\n\r\nexport const trackingPageGA = (page) => {\r\n  ReactGA.pageview(page);\r\n};\r\n\r\nexport const eventGA = (categoryName, eventName) => {\r\n  ReactGA.event({\r\n    category: categoryName, // Required\r\n    action: eventName, // Required\r\n    label: 'labelName',\r\n    value: 10,\r\n    nonInteraction: false,\r\n  });\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux' \r\nimport store from './store'\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}