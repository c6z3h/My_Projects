{"version":3,"sources":["components/SubmitForm.js","components/Notification.js","services/links.js","App.js","index.js"],"names":["SubmitForm","addLink","data","onSubmit","value","newLink","onChange","handleLinkChange","placeholder","newType","handleTypeChange","type","Notification","message","className","baseUrl","getAll","axios","get","then","response","linkObject","post","Footer","style","color","background","fontStyle","fontSize","href","App","useEffect","linkService","allLinks","console","log","setLinks","useState","links","setNewLinks","setNewType","notifMessage","setNotifMessage","addLinkData","event","target","preventDefault","link","returnedLinks","concat","setTimeout","catch","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6JA2CeA,EAtCI,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,QAAQC,EAAU,EAAVA,KAIzB,OACI,uBAAMC,SAAUF,EAAhB,UACI,wCAES,uBACLG,MAAOF,EAAKG,QACZC,SAAUJ,EAAKK,iBACfC,YAAY,kCAGZ,yBAAQJ,MAAOF,EAAKO,QAASH,SAAUJ,EAAKQ,iBAA5C,UACI,uCACA,wBAAQN,MAAM,MAAd,iBACA,wBAAQA,MAAM,OAAd,qBAYJ,0BAEJ,8BACI,wBAAQO,KAAK,SAAb,uBCzBCC,EAZI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,MAAgB,KAAZA,EACK,KAIP,qBAAKC,UAAU,QAAf,SACGD,K,gBCLHE,EAAU,aAGVC,EAAS,WAEX,OADgBC,IAAMC,IAAIH,GACXI,MAAK,SAAAC,GAAQ,OAAIA,EAASlB,SAiB9B,EAAEc,EAAF,EAdA,SAAAK,GAEb,OADgBJ,IAAMK,KAAKP,EAASM,GACrBF,MAAK,SAAAC,GAAQ,OAAIA,EAASlB,SCHrCqB,EAAS,WAOb,OACE,qBAAKC,MAPa,CAClBC,MAAO,OACPC,WAAY,OACZC,UAAW,SACXC,SAAU,IAGV,SACE,wDAA0B,mBAAGC,KAAK,2BAAR,yBAiJjBC,EA5IH,WAYVC,qBATa,WACXC,IAECb,MAAK,SAAAc,GACJC,QAAQC,IAAR,4BAAiCF,IACjCG,EAASH,QAIG,IAGhB,MAA4BI,mBAAS,IAArC,mBAAQC,EAAR,KAAeF,EAAf,KACA,EAAiCC,mBAAS,IAA1C,mBAAQhC,EAAR,KAAiBkC,EAAjB,KACA,EAAgCF,mBAAS,OAAzC,mBAAQ5B,EAAR,KAAiB+B,EAAjB,KAEA,EAAwCH,mBAAS,IAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KA+EMC,EAAc,CAElBtC,UACAI,UACAF,iBAhFuB,SAACqC,GAAD,OAAWL,EAAYK,EAAMC,OAAOzC,QAiF3DM,iBAhFqB,SAACkC,GACtBV,QAAQC,IAAIS,EAAMC,OAAOzC,OACzBoC,EAAWI,EAAMC,OAAOzC,OACxB8B,QAAQC,IAAI,iBAAmB1B,KA8FjC,OACE,gCACG,cAAC,EAAD,CAAcI,QAAS4B,IAIxB,cAAC,EAAD,CAAYxC,QAtFA,SAAC2C,GACfA,EAAME,iBACN,IAAMzB,EAAa,CAEjB0B,KAAM1C,EACNM,KAAMF,GAERyB,QAAQC,IAAR,iCAAsCd,EAAtC,kBAA0DA,EAAW0B,KAArE,sBAAuF1B,EAAWV,OA8BhGqB,EACUX,GACPF,MAAK,SAAA6B,GACJZ,EAASE,EAAMW,OAAOD,IACxBN,EAAgB,SAAD,OAAUrB,EAAW0B,OACpCG,YAAW,WACTR,EAAgB,MACf,QAEJS,OAAM,SAAAC,GACLlB,QAAQC,IAAIiB,EAAMhC,SAASlB,MAC3BwC,EAAgB,GAAD,OAAIU,EAAMhC,SAASlB,KAAKkD,QACvCF,YAAW,WACTR,EAAgB,MACf,QAGPH,EAAY,IACZC,EAAW,KA+BqBtC,KAAMyC,IASnC,cAAC,EAAD,QC1JPU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.41a959ad.chunk.js","sourcesContent":["import DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport React, { useState, useEffect } from 'react'\r\n// import { SafeAreaView, StyleSheet, TextInput } from \"react-native\";\r\n\r\nconst SubmitForm = ({addLink,data}) => {\r\n    // const [display, handleDisplayChange] = useState('');\r\n    // const onChangeDisplay = (event) => handleDisplayChange(event.target.value)\r\n\r\n    return(\r\n        <form onSubmit={addLink}>\r\n            <div>\r\n                {/* <SafeAreaView> */}\r\n                URL: <input\r\n                value={data.newLink}\r\n                onChange={data.handleLinkChange}\r\n                placeholder=\"https://imgur.com/gallery/...\"\r\n                />\r\n                {/* </SafeAreaView> */}\r\n                <select value={data.newType} onChange={data.handleTypeChange}>\r\n                    <option> </option>\r\n                    <option value=\"GIF\">GIF</option>\r\n                    <option value=\"link\">Link</option>\r\n                </select>\r\n                {/* make this a button: GIF or link */}\r\n                {/* Type (GIF / link): <input\r\n                value={data.newType}\r\n                onChange={data.handleTypeChange}\r\n                /> */}\r\n                {/* <DropdownButton id=\"dropdown-basic-button\" title=\"Dropdown button\" onSelect={data.handleTypeChange}>\r\n                    {/* <Dropdown.Item href=\"#/action-1\">GIF</Dropdown.Item> */}\r\n                    {/* <Dropdown.Item eventKey=\"GIF\">GIF</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"Link\">Link</Dropdown.Item>\r\n                </DropdownButton> */}\r\n                <br />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SubmitForm","const Notification = ({ message }) => {\r\n    if (message === '') {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"notif\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","import axios from 'axios'\r\n// const baseUrl = 'http://localhost:3001/links'\r\nconst baseUrl = '/api/links' // Use relative url\r\n// Now HTTP GET requests to the address www.serversaddress.com/index.html or www.serversaddress.com will show the React frontend. GET requests to the address www.serversaddress.com/api/notes will be handled by the backend's code.\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = linkObject => {\r\n  const request = axios.post(baseUrl, linkObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, linkObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, linkObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return getAll()\r\n}\r\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\r\n// import Persons from './components/Persons'\r\n// import Filter from './components/Filter'\r\nimport SubmitForm from './components/SubmitForm'\r\nimport Notification from './components/Notification'\r\nimport linkService from './services/links'\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import './index.css'\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'blue',\r\n    background: 'gray',\r\n    fontStyle: 'italic',\r\n    fontSize: 25,\r\n  }\r\n  return (\r\n    <div style={footerStyle}>\r\n      <em>comments/feedback to: <a href=\"https://github.com/c6z3h\">c6z3h</a></em>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  \r\n  // // 1. READ PERSON(s)\r\n  const hook = () => {\r\n    linkService\r\n    .getAll()\r\n    .then(allLinks => {\r\n      console.log(`this is allLinks: ${allLinks}`)\r\n      setLinks(allLinks)\r\n    })\r\n  }\r\n\r\n  useEffect(hook, [])\r\n\r\n  // // 1. INITIALIZE\r\n  const [ links, setLinks ] = useState([]) \r\n  const [ newLink, setNewLinks ] = useState('')\r\n  const [ newType, setNewType ] = useState('GIF')\r\n  // const [ filter, setFilter ] = useState('')\r\n  const [notifMessage, setNotifMessage] = useState('')\r\n\r\n  // // Event Handler\r\n  const handleLinkChange = (event) => setNewLinks(event.target.value)\r\n  const handleTypeChange=(event)=>{\r\n    console.log(event.target.value)\r\n    setNewType(event.target.value)\r\n    console.log(\"newType here: \" + newType)\r\n  }\r\n  // const handleTypeChange = (event) => {\r\n  //   console.log(event)\r\n  //   setNewType(event.target.value)\r\n  // }\r\n  // const handleFilterChange = (event) => setFilter(event.target.value)\r\n\r\n  // // Filter\r\n  // const peopleToShow = filter\r\n  //       ? persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\r\n  //       : persons\r\n\r\n  // 2. CREATE or UPDATE PERSON\r\n  const addLink = (event) => {\r\n    event.preventDefault()\r\n    const linkObject = {\r\n      // id: links.length + 1,\r\n      link: newLink,\r\n      type: newType,\r\n    }\r\n    console.log(`This is the linkObject ${linkObject}, link ${linkObject.link}, and type ${linkObject.type}`)\r\n    // const personsArray = persons.map(person => person.name.toLowerCase())\r\n    // // Throw Error If Name Already in List\r\n    // console.log(\"personsArray\", personsArray)\r\n    // console.log(\"${newName}\",`${newName}`)\r\n    // if (personsArray.includes(`${newName}`.toLowerCase())){\r\n    //     if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\r\n    //       const updateMan = persons.filter(person => person.name === `${newName}`)\r\n    //       console.log(\"updateMan is\", updateMan[0])\r\n    //       console.log(\"updateMan.id is\", updateMan[0].id)\r\n    //       personService\r\n    //         .update(updateMan[0].id, personObject)\r\n    //         .catch(error => {\r\n    //           setNotifMessage(\r\n    //             `Information of '${newName}' has already been removed from server`\r\n    //           )\r\n    //           setTimeout(() => {\r\n    //             setNotifMessage('')\r\n    //           }, 5000)\r\n    //           setPersons(persons.filter(p => p.id !== updateMan[0].id))\r\n    //         })\r\n    //         .then(newMan => {\r\n    //           setPersons(persons.map(person => person.id !== newMan.id ? person : newMan))\r\n    //           setNotifMessage(`Updated ${newName}`)\r\n    //           setTimeout(() => {\r\n    //             setNotifMessage('')\r\n    //           }, 5000)\r\n    //         })\r\n    //     }\r\n    //   } else {\r\n      linkService\r\n        .create(linkObject)\r\n        .then(returnedLinks =>{\r\n          setLinks(links.concat(returnedLinks))\r\n        setNotifMessage(`Added ${linkObject.link}`)\r\n        setTimeout(() => {\r\n          setNotifMessage('')\r\n        }, 5000)\r\n      })\r\n      .catch(error => {\r\n        console.log(error.response.data)\r\n        setNotifMessage(`${error.response.data.error}`)\r\n        setTimeout(() => {\r\n          setNotifMessage('')\r\n        }, 5000)\r\n      })\r\n    // }\r\n    setNewLinks('')\r\n    setNewType('')\r\n  }\r\n \r\n  const addLinkData = {\r\n    // INITIALLY addPerson, newName and newNumber\r\n    newLink,\r\n    newType,\r\n    handleLinkChange,\r\n    handleTypeChange\r\n  }\r\n  \r\n  // // 3. DELETE PERSON\r\n  // const deletePerson = id => {\r\n  //   const dangerMan = persons.filter(person => person.id === id)\r\n  //   console.log(dangerMan)\r\n  //   if (window.confirm(`Delete ${dangerMan[0].name} ?`)){\r\n  //     personService\r\n  //       .remove(id)\r\n  //       .then(persons =>{\r\n  //       setPersons(persons)\r\n  //   })\r\n  //   }\r\n    \r\n  // }\r\n\r\n  return (\r\n    <div>\r\n       <Notification message={notifMessage} />\r\n  {/* //     <h2>Phonebook</h2>\r\n  //     <Filter onChange={handleFilterChange} value={filter} />\r\n  //     <h2>add a new</h2> */}\r\n      <SubmitForm addLink={addLink} data={addLinkData} />\r\n  {/* //     <h2>Numbers</h2>\r\n  //     <div>\r\n  //       {peopleToShow.map(persons =>\r\n  //           <Persons persons={persons} deletePerson={() => deletePerson(persons.id)} />\r\n  //       )}\r\n  //     </div>\r\n  //     <br />\r\n  //     <br />*/}\r\n       <Footer /> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}